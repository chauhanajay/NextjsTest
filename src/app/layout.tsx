"use client";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { AuthProvider } from "@/context/AuthContext";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import Link from "next/link";
import { usePathname } from "next/navigation";
import "./globals.css";
import { supabase } from "@/lib/supabaseClient";
import { useRouter } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const queryClient = new QueryClient();

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname(); 
  const router = useRouter();
  
  const hideNavbar = ["/login", "/signup"];
  const handleLogout = async () => {
      await supabase.auth.signOut();
      router.push("/login");
  };

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <QueryClientProvider client={queryClient}>
          <AuthProvider>
            {(!hideNavbar.includes(pathname))&& 
              <nav className="bg-gray-800 text-white p-4 flex items-center">
              <div className="flex gap-4">
                <Link href="/dashboard" className="hover:underline">
                  Home
                </Link>
                <Link href="/project" className="hover:underline">
                  Projects
                </Link>
                <Link href="/task" className="hover:underline">
                  Tasks
                </Link>
              </div>
              <div className="flex-1"></div> 
            
              <button
                onClick={handleLogout}
                className="bg-red-500 hover:bg-red-600 px-4 py-2 rounded"
                style={{cursor: 'pointer'}}
              >
                Logout
              </button>
            </nav>
            
            }
            {children}
          </AuthProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
}
